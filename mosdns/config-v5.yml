---
# /etc/mosdns/config.yaml

## -- Log Config -- ##
log:
  level: debug # ["debug", "info", "warn", and "error"], default is set to "info"
  production: true
  file: "/var/log/mosdns.log"

## -- API Config -- ##
api:
  http: "0.0.0.0:9999"

plugins:
  ## --- Cache --- ##
  - tag: "cache"
    type: cache
    args:
      size: 10240
      lazy_cache_ttl: 86400 # ttl set to 86400 (1 day) or to 0 (off)
      dump_file: ./cache.dump # persist cache to a local file, loaded when service starts
      dump_interval: 600 # autosave interval (s)

  ## -- Reverse Lookup -- ##
  - tag: "reverse_lookup"
    type: reverse_lookup
    args:
      size: 1000 # cache size; default: 65535
      ttl: 3600 # default 7200 (2h)
      handle_ptr: true # handle ptr response (ptr -> cache -> response)

  ## --- Domain Set --- ##
  - tag: "local_domain_set"
    type: domain_set
    args:
      exps:
        - "homelab.sh"

  - tag: "ads_domain_set"
    type: domain_set
    args:
      files:
        - "./domains/reject.txt"
        - "./domains/category-ads-all.txt"

  - tag: "remote_domain_set"
    type: domain_set
    args:
      files:
        # - "./custom/remote.txt"
        - "./domains/gfw.txt"
        - "./domains/google-scholar.txt"
        - "./domains/linkedin.txt"
        - "./domains/netflix.txt"
        - "./domains/openai.txt"
        - "./domains/icloud.txt"
        - "./domains/apple.txt"
        - "./domains/apple-cn.txt"
        - "./domains/twitter.txt"
        - "./domains/telegram.txt"
        - "./domains/google.txt"
        - "./domains/twitter.txt"
        - "./domains/yahoo.txt"
        - "./domains/microsoft.txt"
        - "./domains/cloudflare.txt"
        - "./domains/cloudflare-cn.txt"
        - "./domains/speedtest.txt"
        - "./domains/github.txt"
        - "./domains/category-container.txt"
        - "./domains/category-dev.txt"
        - "./domains/geolocation-!cn.txt"
        - "./domains/category-scholar-!cn.txt"

  - tag: "direct_domain_set"
    type: domain_set
    args:
      files:
        - "./domains/direct.txt"
        - "./domains/cn.txt"

  ## --- IP Set --- ##
  - tag: "direct_ip"
    type: ip_set
    args:
      files:
        - "./ips/cn.txt"

  ## --- Upstream Servers --- ##
  - tag: "local_forward"
    type: forward
    args:
      upstreams: 
       ## --- Local DNS Servers --- ##
        - tag: pihole
          addr: "10.178.0.6"

  - tag: "remote_forward"
    type: forward
    args:
      upstreams: 
        ##  --- Remote DNS Servers --- ##
        - tag: opendns_dot
          addr: "tls://208.67.222.222"
          enable_pipeline: true
          idle_timeout: 86400
          insecure_skip_verify: true

  - tag: "domestic_forward"
    type: forward
    args:
      upstreams: 
       ## --- Domestic DNS Servers --- ##
        - tag: ali_dot
          addr: "tls://223.5.5.5"
          enable_pipeline: true
          idle_timeout: 86400
          insecure_skip_verify: true

  ## -- Sequences -- ##
  - tag: "ttl_sequence"
    type: sequence
    args:
      - exec: ttl 600-3600
      - exec: accept

  - tag: "ads_block_sequence"
    type: sequence
    args:
      - exec: query_summary ads_block
      - exec: metrics_collector ads_block
      - exec: reject 0

  - tag: "local_sequence"
    type: sequence
    args:
      - exec: query_summary local_forward
      - exec: metrics_collector local_forward
      - exec: $local_forward

  - tag: "domestic_sequence"
    type: sequence
    args:
      - exec: query_summary domestic_forward
      - exec: metrics_collector domestic_forward
      - exec: $domestic_forward
      - exec: goto ttl_sequence

  - tag: "remote_sequence"
    type: sequence
    args:
      - exec: query_summary remote_forward
      - exec: metrics_collector remote_forward
      - exec: $remote_forward
      - matches: "resp_ip $direct_ip"
        exec: $domestic_forward
      - exec: goto ttl_sequence

  ## --- Fallback IP Sequence --- ##
  # if response has direct IP, forward to domestic upstream
  - tag: "ip_sequence"
    type: sequence
    args:
      - exec: query_summary ip_forward
      - exec: metrics_collector ip_forward
      - exec: $remote_forward
      - matches: "resp_ip $direct_ip"
        exec: $domestic_forward
      - exec: goto ttl_sequence
  
  ## --- Fallback --- ##
  - tag: "fallback"
    type: fallback
    args:
      primary: ip_sequence
      secondary: remote_sequence
      threshold: 500  # no response timeout, default value is 500ms
      always_standby: false # do not use concurrency; if primary fails, exec secondary

  ## --- Main Sequence --- ##
  - tag: "main_sequence"
    type: sequence
    args:
      - exec: prefer_ipv4

      # - matches: "qname $local_domain_set"
      #   exec: goto local_sequence

      - exec: $reverse_lookup # enable reverse_lookup
      - matches: has_resp
        exec: accept # end if reponse found in cache

      - exec: $cache # enable cache
      - matches: has_resp
        exec: accept # end if reponse found in cache

      - matches: qtype 65
        exec: reject 3

      - matches: "qname $ads_domain_set" # block ads
        exec: goto ads_block_sequence

      - matches: "qname $remote_domain_set"
        exec: goto remote_sequence

      - matches: "qname $direct_domain_set"
        exec: goto domestic_sequence

      - exec: $fallback

  - tag: udp_server
    type: udp_server
    args:
      entry: main_sequence
      listen: :53
